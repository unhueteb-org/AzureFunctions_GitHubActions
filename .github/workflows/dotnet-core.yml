name: .NET Core 3.1 Function to Azure Function

env:
  AZURE_FUNCTIONAPP_NAME: GAchallengeUnai  # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'    # set this to the path to your web app project, defaults to the repository root
 
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
      
    - name: Install dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
      
       #Publish webapp artifacts
    - name: Upload Function Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Function
        path: ${{env.DOTNET_ROOT}}/myapp
        
     #Publish webapp artifacts
    - name: Upload ARM Templates Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ARM_Templates
        path: ${{ github.workspace }}/ARMTemplates   
  
  deploy-arm-template:
    runs-on: ubuntu-latest
    
    needs: build
    env:
      AZURE_RESOURCE_GROUP: AzureChallengeGitHubActionsRG  # set this to your Azure Resource group's name  
      AZURE_LOCATION: NorthEurope  # set this to your Location Name 
    
    steps:
          #Download ARM template artifatcts
      - uses: actions/download-artifact@v2
        with:
          name: ARM_Templates

      # Authentication
      # Set up the following secrets in your repository: AZURE_CREDENTIALS
      # For details on usage of secrets, please refer https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS  }}


      # Deployment of template    
      - name: Deploy ARM Template
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: 
          # You can change these environment variables for your configuration:   AZURE_RESOURCE_GROUP, AZURE_LOCATION 
          # For details on usage of environment variables, please refer https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables
          # or specify these parameters inline.  Example:  az group create -l westus -n MyResourceGroup

            az deployment group create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --template-file $GITHUB_WORKSPACE/template.json  --parameters $GITHUB_WORKSPACE/parameters.json  --mode incremental 

         # For more details on above command refer https://docs.microsoft.com/en-us/cli/azure/group/deployment?view=azure-cli-latest#az-group-deployment-create       

  
  publish-azure-function:
    
    runs-on: ubuntu-latest
    
    needs: build
    env:
      AZURE_RESOURCE_GROUP: AzureChallengeGitHubActionsRG-rg   # set this to your Azure Resource group's name  
      AZURE_LOCATION: WestEurope  # set this to your Location Name 
    
    steps:
                
    #Download ARM template artifatcts
    - uses: actions/download-artifact@v2
      with:
        name: Function
        path: $GITHUB_WORKSPACE/Function
    
    #- name: 'Checkout GitHub Action'
     # uses: actions/checkout@master

    
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: $GITHUB_WORKSPACE/Function
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
