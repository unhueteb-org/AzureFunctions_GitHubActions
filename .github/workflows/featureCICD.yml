name: feature(ephimeral) cicd

on:
  pull_request:
    branches: [ dev ]
 

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
      
    - name: Install dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
      
       #Publish webapp artifacts
    - name: Upload Function Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Function
        path: ${{env.DOTNET_ROOT}}/myapp
        
     #Publish webapp artifacts
    - name: Upload ARM Templates Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ARM_Templates
        path: ${{ github.workspace }}/ARMTemplates   
  
  deploy-arm-template:
    runs-on: ubuntu-latest
    
    needs: build
    env:
      AZURE_RESOURCE_GROUP: AzureChallengeGitHubActionsRG-rg  # set this to your Azure Resource group's name  
      AZURE_LOCATION: NorthEurope  # set this to your Location Name 
    
    steps:
      
      - name: Step that prints name of pull request's base branch
        run: |
          echo "Pull request's base branch is: ${BASE_BRANCH}"
        env:
          BASE_BRANCH: ${{ github.base_ref }}
        if: github.event_name == 'pull_request'
        
       
        
          #Download ARM template artifatcts
      - uses: actions/download-artifact@v2
        with:
          name: ARM_Templates

      # Authentication
      # Set up the following secrets in your repository: AZURE_CREDENTIALS
      # For details on usage of secrets, please refer https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_RBAC_CREDENTIALS  }}


      # Deployment of template    
      - name: Deploy ARM Template
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: 
          # You can change these environment variables for your configuration:   AZURE_RESOURCE_GROUP, AZURE_LOCATION 
          # For details on usage of environment variables, please refer https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables
          # or specify these parameters inline.  Example:  az group create -l westus -n MyResourceGroup

            az deployment group create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --template-file $GITHUB_WORKSPACE/template.json  --parameters $GITHUB_WORKSPACE/parameters.json --parameters appName=azurechallengeunai-${{ github.head_ref }}  --mode incremental 

         # For more details on above command refer https://docs.microsoft.com/en-us/cli/azure/group/deployment?view=azure-cli-latest#az-group-deployment-create       

  
  publish-azure-function:
    
    runs-on: ubuntu-latest
    
    needs: deploy-arm-template
    env:
      AZURE_RESOURCE_GROUP: AzureChallengeGitHubActionsRG-rg   # set this to your Azure Resource group's name  
      AZURE_LOCATION: WestEurope  # set this to your Location Name 
      #AZURE_FUNCTIONAPP_NAME: azurechallengeunai-
    
    steps:
    
                
    #Download ARM template artifatcts
    - uses: actions/download-artifact@v2
      with:
        name: Function
        path: $GITHUB_WORKSPACE/Function
    
    
     
# Authentication
    # Set up the following secrets in your repository: AZURE_CREDENTIALS
    # For details on usage of secrets, please refer https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_RBAC_CREDENTIALS  }}
    
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: azurechallengeunai-${{ github.head_ref }}                                                           
        package: $GITHUB_WORKSPACE/Function
        
    - name: Azure CLI Action
      uses: Azure/cli@v1.0.0
      with:
        # Specify the script here
        inlineScript: |
          az functionapp stop --name azurechallengeunai-${{ github.head_ref }}   --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
          az functionapp delete --name azurechallengeunai-${{ github.head_ref }}   --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
        
        
    - name: Azure CLI Action
      uses: Azure/cli@v1.0.0
      with:
        # Specify the script here
        inlineScript: az monitor app-insights component delete --app azurechallengeunai-${{ github.head_ref }}   -g ${{ env.AZURE_RESOURCE_GROUP }}
